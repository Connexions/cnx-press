resources:

  - name: source-code
    type: git
    source:
      uri: https://github.com/openstax/cnx-press.git
      branch: feature/concourse-ci

  - name: press-image
    type: docker-image
    source:
      repository: openstax/cnx-press
      username: ((docker-hub-username))
      password: ((docker-hub-password))

  - name: dcind-image
    type: docker-image
    source:
      repository: pumazi/dcind
      tag: latest

  # - name: tag-docker-image
  #   type: docker-image
  #   source:
  #     repository: pumazi/concourse-tag-docker-image-resource

  # - name: cnx-automation
  #   type: docker-image
  #   source:
  #     repository: openstax/cnx-automation
  #     tag: latest


jobs:
  - name: build-and-publish-container
    public: true
    plan:
      - get: source-code
      - put: press-image
        params:
          build: source-code
          tag_file: source-code/.git/short_ref
          rootfs: true
          # FIXME: Ideally, we don't want to tag as latest, nor do we want to
          #        tag at this point in the process. Only push to a symbolic
          #        tag when you've verified the build; so likely only after
          #        all the tests have run.
          tag_as_latest: true

  - name: run-unit-and-integration-tests
    public: true
    plan:
      - get: source-code
      - get: press-image
        passed: [build-and-publish-container]
        # This isn't actually used, but needed to make this job depend on the
        # previous job. The issue is that we'd like to pull a specific
        # version, but we aren't able to say that as part of the 'get' step.
        # That information is defined and locked in the resource definition.
      - get: dcind-image
      - task: run-tests
        privileged: true
        image: dcind-image
        config:
          platform: linux
          # image_resource:
          #   type: docker-image
          #   source:
          #     # TODO: install automake in the container so we can use `make test`
          #     repository: pumazi/dcind
          #     tag: latest
          inputs:
            - name: source-code
          run:
            # TODO: Pass the built image through to this container for use.
            #       Only publish externally after the tests have passed.
            #       This is to address the time it takes to both upload and download
            #       when the source is available right here.
            path: entrypoint.sh
            args:
              - bash
              - -ceau
              - |
                cd source-code
                # Specify the built container to use
                # Note: Use `git show-ref --hash=7 HEAD` to locally mock this behavior
                export PRESS_CONTAINER_TAG=$(cat .git/short_ref)
                # Print out the compose-file for clarity and debugging
                docker-compose config
                # Startup the stack for integration testing
                docker-compose up -d
                # Run the tests
                docker-compose run --rm web bin/test

  # - name: deploy-to-staging-area
  #   public: true
  #   plan:
  #     - get: source-code
  #     - task: deploy
  #       image: dcind-image
  #       inputs:
  #         - source-code
  #       run:
  #         path: source-code/.ci/bin/deploy

  # - name: run-ui-tests-on-deploy
  #   public: true
  #   plan:
  #     - task:
  #       image: cnx-automation
  #       run:
  #         path: tox

  # - name: publish-release
  #   public: true
  #   plan:
  #     # TODO: Push the symbolic tag (e.g. latest, dev, stable, etc) for the built image
  #     #       See also the fixme in 'build-and-publish-container'
  #     # TODO: notify slack
  #     # TODO: notify github
